name: tests packages/core

on:
    push:
        branches:
            - main
        paths:
            - 'packages/core/**'
    pull_request:
        paths:
            - 'packages/core/**'

jobs:
    main:
        name: Build and test (without Redis test) on Node ${{ matrix.node }} and ${{ matrix.os }}

        runs-on: ${{ matrix.os }}
        defaults:
            run:
                working-directory: ./packages/core
        strategy:
            matrix:
                node: ['14.x', '16.x']
                os: [ubuntu-latest, windows-latest, macOS-latest]

        steps:
            - name: Checkout repo
              uses: actions/checkout@v2

            - name: Use Node ${{ matrix.node }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node }}

            - name: Install
              run: yarn

            - name: Build
              run: yarn build

            - name: Test
              run: yarn test --ci --coverage --maxWorkers=2
              env:
                  TEST_SKIP_REDIS: true

    large-test:
        name: Large test & Redis test on Node ${{ matrix.node}} and ${{ matrix.os }}

        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./packages/core
        strategy:
            matrix:
                node: ['16.x']

        steps:
            - name: Checkout repo
              uses: actions/checkout@v2

            - name: Use Node ${{ matrix.node }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node }}

            # https://docs.github.com/ja/actions/using-containerized-services/creating-redis-service-containers の方法だとRedisに接続できなかったため、代わりに採用している
            - name: Start Redis
              uses: supercharge/redis-github-action@1.2.0
              with:
                  redis-version: 6

            - name: Install
              run: yarn

            - name: Test
              run: TEST_NUM_RUNS=5000 yarn test --ci --coverage --maxWorkers=2
