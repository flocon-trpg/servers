name: release

on:
    push:
        tags:
            - 'v2*.*.*'
            - 'v3*.*.*'

jobs:
    git-diff-main:
        name: git diff remotes/origin/main

        runs-on: ubuntu-22.04

        steps:
            - name: List git config
              run: git config -l

            - uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Fail if not all the files are OK
              run: |
                  if [[ -n "$(git diff remotes/origin/main)" ]]; then
                      echo "ERROR: The project is dirty!"
                      git diff --stat remotes/origin/main
                    exit 1
                  else
                      echo "OK."
                  fi

    release:
        runs-on: ubuntu-22.04
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Use Node 22.x
              uses: actions/setup-node@v4
              with:
                  node-version: 22.x
                  cache: yarn

            - run: yarn

            # 下のほうで `yarn run gen-flyio-dockerfile` や `yarn run gen-git-tags` を実行しているため API サーバーもビルドする必要がある
            - run: yarn build

            - name: mv dist directory
              run: mv ./apps/web-server/dist ./flocon_web_server

            - name: Create flocon_web_server.zip
              run: zip -r ${GITHUB_WORKSPACE}/flocon_web_server.zip ./flocon_web_server

            - name: Generate Dockerfile
              run: yarn run gen-flyio-dockerfile
              working-directory: ./apps/api-server

            - name: mv Dockerfile
              run: mv ./apps/api-server/flyio.Dockerfile ./Dockerfile

            - name: Create flocon_api_server_flyio.zip
              run: zip ${GITHUB_WORKSPACE}/flocon_api_server_flyio.zip ./Dockerfile

            - run: yarn run gen-github-release-name
              working-directory: ./apps/api-server

            - name: set name to GITHUB_ENV
              run: |
                  release_name=$(cat ./apps/api-server/github-release-name.txt) 
                  echo "release_name=$release_name" >> $GITHUB_ENV

            - name: Release
              uses: softprops/action-gh-release@v2
              with:
                  files: |
                      flocon_web_server.zip
                      flocon_api_server_flyio.zip
                  draft: true
                  name: ${{ env.release_name }} (${{ github.ref_name }}) ※ Web サーバーと API サーバーのバージョンは推定値です
