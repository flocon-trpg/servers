name: CI

on: [push, pull_request]

jobs:
    main:
        name: Type-check and test on ${{ matrix.container }}

        strategy:
            matrix:
                container: ['node:14']

        runs-on: ubuntu-latest
        container: ${{ matrix.container }}

        services:
            postgres:
                image: postgres
                env:
                    POSTGRES_USER: postgres
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_DB: test
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 5432:5432

        steps:
            - name: Checkout repo
              uses: actions/checkout@v2

            - name: Update to npm@7
              run: npm install -g npm@7

            - name: Install
              run: npm ci

            - name: Type-check
              run: npm run type-check

            - name: Migration-up SQLite(1)
              run: npm run migration-up -- --db sqlite
              env:
                  FLOCON_API_CONFIG: >
                      {
                          "database": {
                              "sqlite": {
                                  "dbName": "./test1.sqlite3"
                              }
                          }
                      }

            - name: Migration-up SQLite(2)
              run: npm run migration-up -- --db sqlite
              env:
                  FLOCON_API_CONFIG: >
                      {
                          "database": {
                              "sqlite": {
                                  "dbName": "./test2.sqlite3"
                              }
                          }
                      }

            - name: Migration-up PostgreSQL
              run: npm run migration-up -- --db postgresql
              env:
                  FLOCON_API_CONFIG: >
                      {
                          "database": {
                              "postgresql": {
                                  "dbName": "test",
                                  "clientUrl": "postgresql://postgres:postgres@postgres:5432"
                              }
                          }
                      }

            # does not execute `npm run build` because it already has js files

            - name: Test
              run: npm run test -- --ci --coverage --maxWorkers=2

    # fails in windows because it uses crlf
    prettier:
        name: Check install and prettier on Node ${{ matrix.node }} and ${{ matrix.os }}

        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                node: ['14.x']
                os: [ubuntu-latest]

        steps:
            - name: Checkout repo
              uses: actions/checkout@v2

            - name: Use Node ${{ matrix.node }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node }}

            - name: Update to npm@7
              run: npm install -g npm@7

            - name: Install
              run: npm ci

            - name: Prettier(check)
              run: npm run prettier:base -- --check

    install:
        name: Check install --production=${{matrix.param}} and build on on Node ${{ matrix.node }} and ${{ matrix.os }}

        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                node: ['14.x']
                os: [ubuntu-latest, windows-latest] # TODO: add macos-latest
                param: ['false', 'true']

        steps:
            - name: Checkout repo
              uses: actions/checkout@v2

            - name: Use Node ${{ matrix.node }}
              uses: actions/setup-node@v2
              with:
                  node-version: ${{ matrix.node }}

            - name: Update to npm@7
              run: npm install -g npm@7

            - name: Install
              run: npm ci --production=${{matrix.param}}

            - name: Build (as type checking)
              run: npm run build
