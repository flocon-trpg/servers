# 使い方
# 1. このファイルをこのディレクトリ内にコピーします。
# 2. コピーしたファイルを `.env.local`（もしくは`.env`）という名前にリネームします。` は名前に含めてはなりません。
# 3. 説明に従ってファイル内の値を変更します。

# すべての値を.env.localや.envで記述する必要はありません。代わりに環境変数を使用することも可能です。
# このファイルは、Flocon APIサーバーにおいて使用可能な環境変数の一覧のドキュメントとしての役割も兼ねています。


# Firebase構成オブジェクトの設定
# Firebaseの管理ページにあるデータを参照して、*の部分を置き換えてください。
# measurementId は必要ありません。
# 通常は、Webサーバーの NEXT_PUBLIC_FIREBASE_CONFIG と全く同じ値になります。
NEXT_PUBLIC_FIREBASE_CONFIG={"apiKey":"****************","authDomain":"***-*****.firebaseapp.com","databaseURL":"https://***-*****.firebaseio.com","projectId":"***-*****","storageBucket":"***-*****.appspot.com","messagingSenderId":"**********","appId":"****************"}

# POSTGRESQLとSQLITEのうち、少なくとも1つの値を有効化する必要があります。

# PostgreSQLの設定
# データベースにPostgreSQLを用いる場合、2行下にある `# POSTGRESQL=` で始まる行の#を削除して、*の部分を適切な文字列に置き換えてください。
# 入力例: POSTGRESQL={"clientUrl":"postgresql://myuser:mypassword@localhost:5432/mydbname"}
# POSTGRESQL={"clientUrl":"******"}

# SQLiteの設定
# データベースにSQLiteを用いる場合、2行下にある `# SQLITE=` で始まる行の#を削除して、*の部分を適切な文字列に置き換えてください。
# 入力例: SQLITE={"dbName":"./mydbname.sqlite3"}
# SQLITE={"dbName":"****"}

# エントリーパスワード（サイトを初めて利用しようとするユーザーに要求するパスワード）の設定
# "type" の値は "none" か "plain" か "bcrypt" のいずれかを入力します。"none" ならばエントリーパスワードなし、それ以外ならばエントリーパスワードありになります。
# "value" の値は、"type" の値が "plain" であれば平文のパスワード、"bcrypt" であればハッシュを入力（.env.localおよび.envでは $ の文字をエスケープする必要があります。なお、herokuなど架橋変数を直接するサービスの場合は $ をエスケープしてはなりません）します。"type" の値が "none" であれば必要ありません。
# エントリーパスワードなしとする場合の入力例: ENTRY_PASSWORD={"type":"none"}
# 平文として設定する場合の入力例: ENTRY_PASSWORD={"type":"plain","value":"entrypassword"}
# bcryptのハッシュ値として設定する場合の入力例: ENTRY_PASSWORD={"type":"bcrypt","value":"\$2b\$10\$ABC.defgh.igklmnopq/qwertyuiopasdfghjklzxcvbnm0123"}
ENTRY_PASSWORD={"type":"****","value":"**********"}

# Firebase Admin SDKの秘密鍵の設定
# Firebaseと同じサービスアカウントで管理しているGoogle Cloudアプリケーション（例: Google Compute Engine, Google App Engine）上でAPIサーバーを稼働させる場合、この設定は必要ありません。
# そうでない場合は、1行下にある `# FIREBASE_ADMIN_SECRET=` で始まる行の#を削除して、Firebaseの管理ページから生成したFirebase Admin SDKの秘密鍵を参照して、*の部分を適切な文字列に置き換えてください。
# FIREBASE_ADMIN_SECRET={"client_email": "*********", "private_key": "***************************"}

# データベースの自動マイグレーションの設定
# falseをtrueに置き換えることで、アップデートなどによりデータベースにマイグレーションが必要になった場合に自動的にマイグレーションされるようになります。
# データベース内に削除されてほしくないデータがある場合は、マイグレーションが実行される前にデータベースをバックアップしておくことを推奨します。
AUTO_MIGRATION=false

# 部屋の変更履歴を保持する個数の設定
# 例えば10ならば最新の変更履歴を最大で10個保持します。負の値を設定するか ROOMHIST_COUNT をアプリケーションに渡さないようにすると、変更履歴がすべて保持されるようになります。
# Heroku Postgresを利用する際は、保持する個数を大きくしすぎないようにしてください。通常は10程度で十分だと思います。
# なお、この設定に関わらず、部屋が削除される際は同時にその部屋の変更履歴もすべて削除されます。
# ちなみに、変更履歴が保持される理由は、部屋の編集で衝突が起こった際に解決できるようにするためです。現時点では変更履歴をブラウザなどから閲覧する機能はありません。
ROOMHIST_COUNT=10

# ポート番号の設定
# ポート番号を指定したい場合は、2行下にある `# PORT=` で始まる行の#を削除して、右辺に指定したいポート番号を入力します。
# Herokuにデプロイする場合は利用しないでください！
# PORT=4000

# 内蔵アップローダーの有効化の設定
# 有効化する場合は、falseをtrueに置き換えてください。この設定はFirebase Storage版アップローダーには影響しません。
EMBUPLOADER_ENABLED=false

# ここから下の設定は、EMBUPLOADER_ENABLED=trueにしている場合にのみ確認および変更してください。

# EMBUPLOADER_PATH=./uploader

# EMBUPLOADER_MAX_FILE_SIZE=10000000

# EMBUPLOADER_SIZE_QUOTA=1000000000

# EMBUPLOADER_COUNT_QUOTA=1000

# Access-Control-Allow-Originヘッダーの設定
# Access-Control-Allow-Originヘッダーを設定する場合、1行下にある `# ACCESS_CONTROL_ALLOW_ORIGIN` で始まる行#を削除して、右辺を適切な値に置き換えてください。
# ACCESS_CONTROL_ALLOW_ORIGIN=https://example.com